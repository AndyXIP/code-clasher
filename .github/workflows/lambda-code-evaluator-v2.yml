name: Build and Push to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - 'lambda-code-evaluator-v2/**'
      - '!lambda-code-evaluator-v2/README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: lambda-code-evaluator-v2

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: lambda-code-evaluator-v2
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building image..."
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          echo "Pushing image..."
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      - name: Update Lambda Function
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: lambda-code-evaluator-v2
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Updating Lambda function..."
          aws lambda update-function-code \
            --function-name docker-code-evaluator-v2 \
            --image-uri $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
